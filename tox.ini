# ==================================================================================================
# To run a single environment:
#    tox -e py39
# To recreate environment:
#    tox -r
#
# NOTE: github 'actions' (e.g. continuous integration tests) are setup in '.github/workflows/build-status.yaml'
#
# Currently the configuration is setup to run FULL tests on py39 and basic tests on other envs.
#    Full tests means to also run: flake8, coverage, and convert and run notebooks as tests.
# ==================================================================================================

[tox]
requires = tox-conda
isolated_build = true
use_develop = true
conda_channels = conda-forge
deps =
    -r requirements.txt
    -r requirements-dev.txt
parallel_show_output = true
envlist =
    py39
    py310
    py311
    py312

[testenv]
allowlist_externals =
    which
    python
    pytest
    flake8
    cat
commands =
    which python
    python --version
    which pytest
    pytest --version
    # run `pytest`, in general: ignore converted-notebooks (py39 will handle this)
    pytest --ignore=holodeck/tests/converted_notebooks/

[testenv:py39]
commands =
    python {toxinidir}/scripts/convert_notebook_tests.py
    pytest holodeck/tests/converted_notebooks/
    which flake8
    flake8 --version
    flake8


[flake8]
max-line-length=140
docstring-convention=all
max-complexity = 15
exclude =
    .git
    .tox
    __pycache__
    build
    converted_notebooks
    dist
    data
    docs
    notebooks
    notebooks/dev
    scripts
    venv
    pyproject.toml
ignore=
    F401   # imported but unused
    W293   # blank line contains whitespace
    E226   # missing whitespace around arithmetic operator
    E241   # multiple spaces after ','
    E722   # do not use bare 'except'
    E731   # do not assign a lambda expression, use a def
    C901   # is too complex (17)
    W605   # invalid escape sequence [e.g. '\s'] :: can be caused by inline sphinx latex math
    # E262   # inline comment should start with '# '
    # E302   # expected 2 blank lines, found 1
    # W391   # blank line at end of file

#     P102,B311,W503,E226,S311,
#     # Missing Docstrings
#     D100,D104,D105,D107,
#     # Docstring Whitespace
#     D203,D212,D214,D215,
#     # Docstring Quotes
#     D301,D302,
#     # Docstring Content
#     D400,D401,D402,D404,D405,D406,D407,D408,D409,D410,D411,D412,D413,D414,D416,D417,
#     # Type Annotations
#     ANN002,ANN003,ANN101,ANN102,ANN204,ANN206,
#     # pep8-naming
#     N802,N806,N815,

[coverage:run]
; branch = true
parallel = true

[coverage:report]
show_missing = True
omit =
    ./holodeck/tests/*
    ./scripts/*
    setup.py
exclude_lines =
    \#\s*pragma: no cover
    \#\s*\bnocov\b
    ^\s*raise NotImplementedError\b
    ^\s*return NotImplemented\b
    ^\s*raise$
    @abstractmethod
    @abc.abstractmethod

[pytest]
filterwarnings =
    ; action:message:category:module:line
    ; ignore:<REGEX>:<TYPE>
    ignore:overflow encountered in exp:RuntimeWarning
    ignore:invalid escape sequence:DeprecationWarning